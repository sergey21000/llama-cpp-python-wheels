name: Build and Release Wheels (CPU)

on: workflow_dispatch

permissions:
  contents: write

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2022]

    steps:
      - name: Checkout llama-cpp-python
        uses: actions/checkout@v4
        with:
          repository: abetlen/llama-cpp-python
          path: .
          ref: main
          submodules: recursive

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: "cp311-* cp312-*"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_SKIP: pp*
          CIBW_ENVIRONMENT_LINUX: >
            CMAKE_ARGS="-DBUILD_SHARED_LIBS=OFF -DLLAMA_STATIC=ON -DGGML_STATIC=ON -DGGML_SHARED=OFF"
          CIBW_MANYLINUX_X86_64: manylinux_2_28
        with:
          package-dir: .
          output-dir: wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  release:
    name: Release
    needs: [build_wheels]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist

      - name: Extract version from wheel
        id: extract_version
        run: |
          WHEEL_NAME=$(ls dist/*.whl | head -n 1)
          VERSION=$(echo "$WHEEL_NAME" | grep -oP 'llama_cpp_python-\K\d+\.\d+\.\d+')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Release wheels
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          tag_name: v${{ steps.extract_version.outputs.version }}-cpu
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
