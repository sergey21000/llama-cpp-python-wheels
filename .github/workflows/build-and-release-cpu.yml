name: Build and Release Wheels (CPU)

on: workflow_dispatch

permissions:
  contents: write

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2022]

    steps:
      - name: Checkout llama-cpp-python
        uses: actions/checkout@v4
        with:
          repository: abetlen/llama-cpp-python
          path: .
          ref: main
          submodules: recursive
          
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          python -m uv pip install -e .[all] --verbose

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_REPAIR_WHEEL_COMMAND: ""
          CIBW_BUILD: "cp311-* cp312-*"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_SKIP: "*musllinux* pp*"
        with:
          package-dir: .
          output-dir: wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  release:
    name: Release
    needs: [build_wheels]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist

      - name: Extract version from wheel
        id: extract_version
        run: |
          python -c "from glob import glob; \
          print(glob('dist/*.whl')[0].split('-')[1])" >> $GITHUB_OUTPUT
          
      - name: Release wheels
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          tag_name: v${{ steps.extract_version.outputs.version }}-cpu
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
